{"ast":null,"code":"import _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/AllCampusesContainer.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllPlayersThunk } from '../../thunks';\nimport { AllPlayersView } from '../views'; // Smart container;\n\nvar AllCampusesContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllCampusesContainer, _Component);\n\n  function AllCampusesContainer() {\n    _classCallCheck(this, AllCampusesContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AllCampusesContainer).apply(this, arguments));\n  }\n\n  _createClass(AllCampusesContainer, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   this.props.fetchAllPlayers();\n    // }\n    value: function render() {\n      // return <AllPlayersView allPlayers={this.props.allPlayers} />\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"here\");\n    }\n  }]);\n\n  return AllCampusesContainer;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    allCampuses: state.allCampuses\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(fetchAllCampusesThunk());\n    }\n  };\n}; // Type check props;\n\n\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired // Export our store-connected container by default;\n\n};\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/AllCampusesContainer.jsx"],"names":["React","Component","PropTypes","connect","fetchAllPlayersThunk","AllPlayersView","AllCampusesContainer","mapState","state","allCampuses","mapDispatch","dispatch","fetchAllCampuses","fetchAllCampusesThunk","propTypes","array","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;;IACMC,oB;;;;;;;;;;;;;AACJ;AACA;AACA;6BAES;AACP;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD;;;;EARgCL,S,GAWnC;;;AACA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGD,CAJD,C,CAMA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACLC,IAAAA,gBAAgB,EAAE;AAAA,aAAMD,QAAQ,CAACE,qBAAqB,EAAtB,CAAd;AAAA;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACAP,oBAAoB,CAACQ,SAArB,GAAiC;AAC/BL,EAAAA,WAAW,EAAEP,SAAS,CAACa,KAAV,CAAgBC,UADE;AAE/BJ,EAAAA,gBAAgB,EAAEV,SAAS,CAACe,IAAV,CAAeD,UAFF,CAKjC;;AALiC,CAAjC;AAMA,eAAeb,OAAO,CAACI,QAAD,EAAWG,WAAX,CAAP,CAA+BJ,oBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllPlayersThunk } from '../../thunks';\nimport { AllPlayersView } from '../views';\n\n// Smart container;\nclass AllCampusesContainer extends Component {\n  // componentDidMount() {\n  //   this.props.fetchAllPlayers();\n  // }\n\n  render() {\n    // return <AllPlayersView allPlayers={this.props.allPlayers} />\n    return (<div>here</div>)\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk())\n  }\n}\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired\n}\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);\n"]},"metadata":{},"sourceType":"module"}