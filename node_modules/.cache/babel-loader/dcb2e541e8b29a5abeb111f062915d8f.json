{"ast":null,"code":"import _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainerEdit.js\",\n    _this = this;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchAllCampusesThunk, deleteCampus, addCampus } from '../../thunks';\n// import { AllCampusesView } from '../views';\n\nvar SingleCampusContainerEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainerEdit, _Component);\n\n  function SingleCampusContainerEdit() {\n    _classCallCheck(this, SingleCampusContainerEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainerEdit).apply(this, arguments));\n  }\n\n  _createClass(SingleCampusContainerEdit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, this.props.campus);\n    }\n  }]);\n\n  return SingleCampusContainerEdit;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    campus: state.allCampuses.find(function (campus) {\n      return campus.id === _this.props.match.params.id;\n    })\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {// fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    // deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n    // addCampus:(campus) => dispatch(addCampus(campus))\n  };\n}; // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n// Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainerEdit.js"],"names":["React","Component","connect","SingleCampusContainerEdit","props","campus","mapState","state","allCampuses","find","id","match","params","mapDispatch","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;AACA;;IAGMC,yB;;;;;;;;;;;;;6BACI;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,MADd,CADF;AAKD;;;;EAPqCJ,S,GAUxC;;;AACA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,UAAAJ,MAAM;AAAA,aAAIA,MAAM,CAACK,EAAP,KAAc,KAAI,CAACN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,EAA1C;AAAA,KAA7B;AADH,GAAP;AAGD,CAJD,C,CAMA;;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO,CACL;AACA;AACA;AAHK,GAAP;AAKD,CAND,C,CAQA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeZ,OAAO,CAACI,QAAD,EAAWO,WAAX,CAAP,CAA+BV,yBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchAllCampusesThunk, deleteCampus, addCampus } from '../../thunks';\n// import { AllCampusesView } from '../views';\n\n\nclass SingleCampusContainerEdit extends Component {\n  render(){\n    return (\n      <div>\n        {this.props.campus}\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    campus: state.allCampuses.find(campus => campus.id === this.props.match.params.id)\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    // fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    // deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n    // addCampus:(campus) => dispatch(addCampus(campus))\n  }\n}\n\n// Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);\n"]},"metadata":{},"sourceType":"module"}