{"ast":null,"code":"import _toConsumableArray from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from 'axios'; // ACTION TYPES;\n\nvar FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nvar DELETE_CAMPUS = \"DELETE_CAMPUS\";\nvar ADD_CAMPUS = \"ADD_CAMPUS\";\nvar UPDATE_CAMPUS = \"UPDATE_CAMPUS\"; // ACTION CREATORS;\n\nvar fetchAllCampusesActionCreator = function fetchAllCampusesActionCreator(campuses) {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses\n  };\n};\n\nvar deleteCampusActionCreator = function deleteCampusActionCreator(campusID) {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID\n  };\n};\n\nvar addCampusActionCreator = function addCampusActionCreator(campus) {\n  console.log(\"HERE\", campus);\n  return {\n    type: ADD_CAMPUS,\n    payload: campus\n  };\n};\n\nvar updateCampusActionCreator = function updateCampusActionCreator(campus) {\n  console.log(\"HERE\", campus);\n  return {\n    type: UPDATE_CAMPUS,\n    payload: campus\n  };\n}; // THUNK CREATORS;\n\n\nexport var fetchAllCampuses = function fetchAllCampuses() {\n  return function (dispatch) {\n    return axios.get('http://localhost:8081/api/campuses').then(function (res) {\n      return res.data;\n    }).then(function (campuses) {\n      return dispatch(fetchAllCampusesActionCreator(campuses));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteCampus = function deleteCampus(campusID) {\n  return function (dispatch) {\n    return axios.delete('http://localhost:8081/api/campuses', {\n      data: {\n        id: campusID\n      }\n    }).then(function () {\n      dispatch(deleteCampusActionCreator(campusID));\n    });\n  };\n};\nexport var addCampus = function addCampus(campus) {\n  return function (dispatch) {\n    axios.post('http://localhost:8081/api/campuses', {\n      name: campus.campusName,\n      address: campus.campusAddress\n    }).then(function (response) {\n      dispatch(addCampusActionCreator(response.data));\n    });\n  };\n};\nexport var updateCampus = function updateCampus(campus) {\n  return function (dispatch) {\n    console.log(campus); // return axios.put('http://localhost:8081/api/campuses', {campus})\n    // .then(response => {\n    //     dispatch(updateCampusActionCreator(response.data))\n    // })\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload;\n\n    case DELETE_CAMPUS:\n      var newState = state.filter(function (campus) {\n        return campus.id != action.payload;\n      });\n      return newState;\n\n    case ADD_CAMPUS:\n      return _toConsumableArray(state).concat([action.payload]);\n\n    case UPDATE_CAMPUS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/store/utilities/CampusUtilities.js"],"names":["axios","FETCH_ALL_CAMPUSES","DELETE_CAMPUS","ADD_CAMPUS","UPDATE_CAMPUS","fetchAllCampusesActionCreator","campuses","type","payload","deleteCampusActionCreator","campusID","addCampusActionCreator","campus","console","log","updateCampusActionCreator","fetchAllCampuses","dispatch","get","then","res","data","catch","err","deleteCampus","delete","id","addCampus","post","name","campusName","address","campusAddress","response","updateCampus","reducer","state","action","newState","filter"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n// ACTION TYPES;\nconst FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nconst DELETE_CAMPUS = \"DELETE_CAMPUS\"\nconst ADD_CAMPUS = \"ADD_CAMPUS\"\nconst UPDATE_CAMPUS = \"UPDATE_CAMPUS\"\n\n// ACTION CREATORS;\nconst fetchAllCampusesActionCreator = campuses => {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses\n  }\n}\n\nconst deleteCampusActionCreator = campusID => {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID\n  }\n}\n\nconst addCampusActionCreator = campus => {\n  console.log(\"HERE\", campus)\n  return {\n    type: ADD_CAMPUS,\n    payload: campus\n  }\n}\n\nconst updateCampusActionCreator = campus => {\n  console.log(\"HERE\", campus)\n  return {\n    type: UPDATE_CAMPUS,\n    payload: campus\n  }\n}\n\n\n// THUNK CREATORS;\nexport const fetchAllCampuses = () => dispatch => {\n  return axios.get('http://localhost:8081/api/campuses')\n    .then(res => res.data)\n    .then(campuses => dispatch(fetchAllCampusesActionCreator(campuses)))\n    .catch(err => console.log(err))\n}\n\nexport const deleteCampus = (campusID) => dispatch => {\n  return axios.delete('http://localhost:8081/api/campuses', {\n    data: {\n      id: campusID\n    }\n  }).then( () => {\n    dispatch(deleteCampusActionCreator(campusID))\n  })\n}\n\nexport const addCampus = (campus) => dispatch => {\n  axios.post('http://localhost:8081/api/campuses', {\n      name: campus.campusName,\n      address: campus.campusAddress\n    }).then(response => {\n      dispatch(addCampusActionCreator(response.data))\n    })\n}\n\nexport const updateCampus = (campus) => dispatch => {\n  console.log(campus)\n  // return axios.put('http://localhost:8081/api/campuses', {campus})\n  // .then(response => {\n  //     dispatch(updateCampusActionCreator(response.data))\n  // })\n}\n\nconst reducer = (state=[], action) => {\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload\n    case DELETE_CAMPUS:\n      let newState = state.filter(campus => campus.id != action.payload)\n      return newState\n    case ADD_CAMPUS:\n      return [...state, action.payload]\n    case UPDATE_CAMPUS:\n      return action.payload\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}