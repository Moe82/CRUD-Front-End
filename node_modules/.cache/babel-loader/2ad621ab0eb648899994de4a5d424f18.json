{"ast":null,"code":"import _toConsumableArray from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\"; // local backend server port number\n\nvar PORT = 8086; // ACTION TYPES;\n\nvar FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nvar DELETE_CAMPUS = \"DELETE_CAMPUS\";\nvar ADD_CAMPUS = \"ADD_CAMPUS\";\nvar UPDATE_CAMPUS = \"UPDATE_CAMPUS\"; // ACTION CREATORS;\n\nvar fetchAllCampusesActionCreator = function fetchAllCampusesActionCreator(campuses) {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses\n  };\n};\n\nvar deleteCampusActionCreator = function deleteCampusActionCreator(campusID) {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID\n  };\n};\n\nvar addCampusActionCreator = function addCampusActionCreator(campus) {\n  return {\n    type: ADD_CAMPUS,\n    payload: campus\n  };\n};\n\nvar updateCampusActionCreator = function updateCampusActionCreator(campus) {\n  return {\n    type: UPDATE_CAMPUS,\n    payload: campus\n  };\n}; // THUNK CREATORS;\n\n\nexport var fetchAllCampuses = function fetchAllCampuses() {\n  return function (dispatch) {\n    return axios.get(\"http://localhost:\".concat(PORT, \"/api/campuses\")).then(function (res) {\n      return res.data;\n    }).then(function (campuses) {\n      return dispatch(fetchAllCampusesActionCreator(campuses));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteCampus = function deleteCampus(campusID) {\n  return function (dispatch) {\n    return axios.delete(\"http://localhost:\".concat(PORT, \"/api/campuses\"), {\n      data: {\n        id: campusID\n      }\n    }).then(function () {\n      dispatch(deleteCampusActionCreator(campusID));\n    });\n  };\n};\nexport var addCampus = function addCampus(campus) {\n  return function (dispatch) {\n    console.log(campus);\n    axios.post(\"http://localhost:\".concat(PORT, \"/api/campuses\"), {\n      name: campus.campusName,\n      address: campus.campusAddress\n    }).then(function (response) {\n      dispatch(addCampusActionCreator(response.data));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var updateCampus = function updateCampus(campus) {\n  return function (dispatch) {\n    return axios.put(\"http://localhost:\".concat(PORT, \"/api/campuses\"), {\n      campus: campus\n    }).then(function (response) {\n      dispatch(updateCampusActionCreator(response.data));\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload;\n\n    case DELETE_CAMPUS:\n      var newState = state.filter(function (campus) {\n        return campus.id != action.payload;\n      });\n      return newState;\n\n    case ADD_CAMPUS:\n      return _toConsumableArray(state).concat([action.payload]);\n\n    case UPDATE_CAMPUS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/store/utilities/CampusUtilities.js"],"names":["axios","PORT","FETCH_ALL_CAMPUSES","DELETE_CAMPUS","ADD_CAMPUS","UPDATE_CAMPUS","fetchAllCampusesActionCreator","campuses","type","payload","deleteCampusActionCreator","campusID","addCampusActionCreator","campus","updateCampusActionCreator","fetchAllCampuses","dispatch","get","then","res","data","catch","err","console","log","deleteCampus","delete","id","addCampus","post","name","campusName","address","campusAddress","response","updateCampus","put","error","reducer","state","action","newState","filter"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// local backend server port number\nconst PORT = 8086;\n\n// ACTION TYPES;\nconst FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nconst DELETE_CAMPUS = \"DELETE_CAMPUS\";\nconst ADD_CAMPUS = \"ADD_CAMPUS\";\nconst UPDATE_CAMPUS = \"UPDATE_CAMPUS\";\n\n// ACTION CREATORS;\nconst fetchAllCampusesActionCreator = (campuses) => {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses,\n  };\n};\n\nconst deleteCampusActionCreator = (campusID) => {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID,\n  };\n};\n\nconst addCampusActionCreator = (campus) => {\n  return {\n    type: ADD_CAMPUS,\n    payload: campus,\n  };\n};\n\nconst updateCampusActionCreator = (campus) => {\n  return {\n    type: UPDATE_CAMPUS,\n    payload: campus,\n  };\n};\n\n// THUNK CREATORS;\nexport const fetchAllCampuses = () => (dispatch) => {\n  return axios\n    .get(`http://localhost:${PORT}/api/campuses`)\n    .then((res) => res.data)\n    .then((campuses) => dispatch(fetchAllCampusesActionCreator(campuses)))\n    .catch((err) => console.log(err));\n};\n\nexport const deleteCampus = (campusID) => (dispatch) => {\n  return axios\n    .delete(`http://localhost:${PORT}/api/campuses`, {\n      data: {\n        id: campusID,\n      },\n    })\n    .then(() => {\n      dispatch(deleteCampusActionCreator(campusID));\n    });\n};\n\nexport const addCampus = (campus) => (dispatch) => {\n  console.log(campus);\n  axios\n    .post(`http://localhost:${PORT}/api/campuses`, {\n      name: campus.campusName,\n      address: campus.campusAddress,\n    })\n    .then((response) => {\n      dispatch(addCampusActionCreator(response.data));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateCampus = (campus) => (dispatch) => {\n  return axios\n    .put(`http://localhost:${PORT}/api/campuses`, { campus })\n    .then((response) => {\n      dispatch(updateCampusActionCreator(response.data));\n    })\n    .catch((error) => console.error(error));\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload;\n    case DELETE_CAMPUS:\n      let newState = state.filter((campus) => campus.id != action.payload);\n      return newState;\n    case ADD_CAMPUS:\n      return [...state, action.payload];\n    case UPDATE_CAMPUS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}