{"ast":null,"code":"import _defineProperty from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleCampusEditContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\nimport { fetchAllCampuses as _fetchAllCampuses, updateCampus as _updateCampus } from '../../thunks';\n/* import {SingleCampusEditView }from '../views' */\n\nvar SingleCampusContainerEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainerEdit, _Component);\n\n  function SingleCampusContainerEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SingleCampusContainerEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainerEdit).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.fetchAllCampuses();\n\n      setTimeout(function () {\n        var thisCampus = _this.props.allCampuses.find(function (campus) {\n          return campus.id == _this.props.match.params.id;\n        });\n\n        console.log(\"Here\", thisCampus);\n\n        _this.setState({\n          campusName: thisCampus.name,\n          campusAddress: thisCampus.address,\n          campusImgURL: thisCampus.img,\n          campusInfo: thisCampus.info\n        });\n      }, 1000);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.updateCampus({\n        name: _this.state.campusName,\n        address: _this.state.campusAddress,\n        img: _this.state.campusImgURL,\n        info: _this.state.campusInfo,\n        id: parseInt(_this.props.match.params.id)\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\"\n    };\n    return _this;\n  } // ask Bashir about the setTimeout method. \n\n\n  _createClass(SingleCampusContainerEdit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        class: \"user-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Campus Name: \", React.createElement(\"input\", {\n        name: \"campusName\",\n        type: \"text\",\n        value: this.state.campusName,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Campus Address: \", React.createElement(\"input\", {\n        name: \"campusAddress\",\n        type: \"text\",\n        value: this.state.campusAddress,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Campus Image URL: \", React.createElement(\"input\", {\n        name: \"campusImgURL\",\n        type: \"text\",\n        value: this.state.campusImgURL,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Campus Description: \", React.createElement(\"input\", {\n        name: \"campusInfo\",\n        type: \"text\",\n        value: this.state.campusInfo,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        class: \"button\",\n        type: \"submit\",\n        value: \"Save changes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Students on Campus\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add to Campus\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), this.state.numberOfStudents === 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"There's no student in this campus\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"there are $\", this.state.numberOfStudents, \" in this campus\"));\n    }\n  }]);\n\n  return SingleCampusContainerEdit;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    allCampuses: state.allCampuses\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(_fetchAllCampuses());\n    },\n    updateCampus: function updateCampus(campus) {\n      return dispatch(_updateCampus(campus));\n    }\n  };\n}; // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n// Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);","map":{"version":3,"sources":["/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleCampusEditContainer.jsx"],"names":["React","Component","connect","fetchAllCampuses","updateCampus","SingleCampusContainerEdit","props","componentDidMount","setTimeout","thisCampus","allCampuses","find","campus","id","match","params","console","log","setState","campusName","name","campusAddress","address","campusImgURL","img","campusInfo","info","handleSubmit","event","preventDefault","state","parseInt","handleChange","target","value","numberOfStudents","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { fetchAllCampuses, updateCampus } from '../../thunks';\n/* import {SingleCampusEditView }from '../views' */\n\n\nclass SingleCampusContainerEdit extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\"\n    }\n  }\n\n  // ask Bashir about the setTimeout method. \n  componentDidMount = () => {\n    this.props.fetchAllCampuses()\n    setTimeout( () => {\n      let thisCampus = this.props.allCampuses.find(campus => campus.id == this.props.match.params.id)\n      console.log(\"Here\", thisCampus)\n      this.setState({\n        campusName: thisCampus.name,\n        campusAddress: thisCampus.address,\n        campusImgURL: thisCampus.img,\n        campusInfo: thisCampus.info\n      })\n    }, 1000)\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateCampus({\n      name: this.state.campusName,\n      address: this.state.campusAddress,\n      img: this.state.campusImgURL,\n      info: this.state.campusInfo,\n      id: parseInt(this.props.match.params.id)\n    })\n  } \n\n  handleChange = (event) => { this.setState({ [event.target.name]: event.target.value }) }\n\n  render(){\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} class=\"user-input\">\n          <label> \n            Campus Name: <input name=\"campusName\" type=\"text\" value={this.state.campusName} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <label>\n            Campus Address: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n          </label> \n            <br />\n          <label>\n            Campus Image URL: <input name=\"campusImgURL\" type=\"text\" value={this.state.campusImgURL} onChange={this.handleChange} required/> \n          </label>\n          <br />\n          <label>\n            Campus Description: <input name=\"campusInfo\" type=\"text\" value={this.state.campusInfo} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <input class=\"button\" type=\"submit\" value=\"Save changes\" />\n        </form>\n        <br/>\n        <div>Students on Campus</div>\n        <button>Add to Campus</button>\n        <br/>\n        {(this.state.numberOfStudents === 0)? <div>There's no student in this campus</div> :\n        <div>there are ${this.state.numberOfStudents} in this campus</div>}\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampuses()),\n    updateCampus: (campus) => dispatch(updateCampus(campus))\n  }\n}\n\n// Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);\n"]},"metadata":{},"sourceType":"module"}