{"ast":null,"code":"import _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllPlayersThunk } from '../../thunks';\nimport { AllPlayersView } from '../views'; // Smart container;\n\nvar AllPlayersContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllPlayersContainer, _Component);\n\n  function AllPlayersContainer() {\n    _classCallCheck(this, AllPlayersContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AllPlayersContainer).apply(this, arguments));\n  }\n\n  _createClass(AllPlayersContainer, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   this.props.fetchAllPlayers();\n    // }\n    value: function render() {\n      // return <AllPlayersView allPlayers={this.props.allPlayers} />\n      return asdasd;\n    }\n  }]);\n\n  return AllPlayersContainer;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    allPlayers: state.allPlayers\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllPlayers: function fetchAllPlayers() {\n      return dispatch(fetchAllPlayersThunk());\n    }\n  };\n}; // Type check props;\n\n\nAllPlayersContainer.propTypes = {\n  allPlayers: PropTypes.array.isRequired,\n  fetchAllPlayers: PropTypes.func.isRequired // Export our store-connected container by default;\n\n};\nexport default connect(mapState, mapDispatch)(AllPlayersContainer);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/AllPlayersContainer.jsx"],"names":["React","Component","PropTypes","connect","fetchAllPlayersThunk","AllPlayersView","AllPlayersContainer","asdasd","mapState","state","allPlayers","mapDispatch","dispatch","fetchAllPlayers","propTypes","array","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;;IACMC,mB;;;;;;;;;;;;;AACJ;AACA;AACA;6BAES;AACP;AACA,aAAOC,MAAP;AACD;;;;EAR+BN,S,GAWlC;;;AACA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACLC,IAAAA,eAAe,EAAE;AAAA,aAAMD,QAAQ,CAACR,oBAAoB,EAArB,CAAd;AAAA;AADZ,GAAP;AAGD,CAJD,C,CAMA;;;AACAE,mBAAmB,CAACQ,SAApB,GAAgC;AAC9BJ,EAAAA,UAAU,EAAER,SAAS,CAACa,KAAV,CAAgBC,UADE;AAE9BH,EAAAA,eAAe,EAAEX,SAAS,CAACe,IAAV,CAAeD,UAFF,CAKhC;;AALgC,CAAhC;AAMA,eAAeb,OAAO,CAACK,QAAD,EAAWG,WAAX,CAAP,CAA+BL,mBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllPlayersThunk } from '../../thunks';\nimport { AllPlayersView } from '../views';\n\n// Smart container;\nclass AllPlayersContainer extends Component {\n  // componentDidMount() {\n  //   this.props.fetchAllPlayers();\n  // }\n\n  render() {\n    // return <AllPlayersView allPlayers={this.props.allPlayers} />\n    return asdasd\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allPlayers: state.allPlayers\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllPlayers: () => dispatch(fetchAllPlayersThunk())\n  }\n}\n\n// Type check props;\nAllPlayersContainer.propTypes = {\n  allPlayers: PropTypes.array.isRequired,\n  fetchAllPlayers: PropTypes.func.isRequired\n}\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllPlayersContainer);\n"]},"metadata":{},"sourceType":"module"}