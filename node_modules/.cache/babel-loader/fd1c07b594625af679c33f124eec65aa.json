{"ast":null,"code":"import _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainer.jsx\";\nimport React, { Component } from 'react';\nimport { NavBarView } from '../views';\nimport AllStudentsView from \"../views/AllStudentsView\";\nimport { connect } from 'react-redux';\nimport { fetchAllCampuses as _fetchAllCampuses, deleteCampus, addCampus } from '../../thunks';\n\nvar SingleCampusContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainer, _Component);\n\n  function SingleCampusContainer() {\n    _classCallCheck(this, SingleCampusContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainer).apply(this, arguments));\n  }\n\n  _createClass(SingleCampusContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Bad practice. Talk to Bashir later about finding a better solution. \n      setTimeout(function () {\n        _fetchAllCampuses();\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(NavBarView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.props.campus.name), React.createElement(\"img\", {\n        src: this.props.campus.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), this.props.campusinfo, this.props.campusaddress, React.createElement(AllStudentsView, {\n        allStudents: this.props.campuses.students,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SingleCampusContainer;\n}(Component);\n\nvar mapState = function mapState(state, ownprops) {\n  return {\n    campus: state.allCampuses.find(function (campus) {\n      return campus.id == ownprops.match.params.id;\n    })\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(_fetchAllCampuses());\n    }\n  };\n}; // Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainer);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainer.jsx"],"names":["React","Component","NavBarView","AllStudentsView","connect","fetchAllCampuses","deleteCampus","addCampus","SingleCampusContainer","setTimeout","props","campus","name","img","campusinfo","campusaddress","campuses","students","mapState","state","ownprops","allCampuses","find","id","match","params","mapDispatch","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,UAAV,QAA4B,UAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAgB,IAAhBA,iBAAT,EAA2BC,YAA3B,EAAyCC,SAAzC,QAA0D,cAA1D;;IAEMC,qB;;;;;;;;;;;;;wCAEiB;AACnB;AACAC,MAAAA,UAAU,CAAC,YAAU;AAAEJ,QAAAA,iBAAgB;AAAI,OAAjC,EAAmC,IAAnC,CAAV;AACC;;;6BAEK;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKK,KAAL,CAAWC,MAAX,CAAkBC,IAAvB,CAFF,EAGE;AAAK,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIG,KAAKH,KAAL,CAAWI,UAJd,EAKG,KAAKJ,KAAL,CAAWK,aALd,EAME,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AASE;;;;EAjB8BhB,S;;AAqBpC,IAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACpC,SAAO;AACLT,IAAAA,MAAM,EAAEQ,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,UAAAX,MAAM;AAAA,aAAIA,MAAM,CAACY,EAAP,IAAaH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBF,EAAvC;AAAA,KAA7B;AADH,GAAP;AAGD,CAJD;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACLtB,IAAAA,gBAAgB,EAAE;AAAA,aAAMsB,QAAQ,CAACtB,iBAAgB,EAAjB,CAAd;AAAA;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAeD,OAAO,CAACc,QAAD,EAAWQ,WAAX,CAAP,CAA+BlB,qBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {  NavBarView } from '../views';\nimport AllStudentsView from \"../views/AllStudentsView\";\nimport { connect } from 'react-redux';\nimport { fetchAllCampuses, deleteCampus, addCampus } from '../../thunks';\n\nclass SingleCampusContainer extends Component {\n\n  componentDidMount () {\n    // Bad practice. Talk to Bashir later about finding a better solution. \n    setTimeout(function(){ fetchAllCampuses() }, 1000);\n    }\n  \n  render(){\n    return (\n      <div>\n        <NavBarView />\n        <h1>{this.props.campus.name}</h1>\n        <img src={this.props.campus.img} />\n        {this.props.campusinfo}\n        {this.props.campusaddress}\n        <AllStudentsView allStudents={this.props.campuses.students}/>\n      </div>\n    )}\n}\n\n\nconst mapState = (state, ownprops) => {\n  return {\n    campus: state.allCampuses.find(campus => campus.id == ownprops.match.params.id), \n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampuses()),\n  }\n}\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainer);"]},"metadata":{},"sourceType":"module"}