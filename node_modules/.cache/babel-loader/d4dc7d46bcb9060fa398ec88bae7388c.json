{"ast":null,"code":"import _defineProperty from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainerEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\nimport { fetchAllCampusesThunk } from '../../thunks'; // import { AllCampusesView } from '../views';\n\nvar SingleCampusContainerEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainerEdit, _Component);\n\n  function SingleCampusContainerEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SingleCampusContainerEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainerEdit).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.fetchAllCampuses();\n\n      console.log(_this.props.allCampuses);\n\n      _this.setState({\n        campusName: _this.props.allCampuses.name\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SingleCampusContainerEdit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        class: \"user-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Campus Name: \", React.createElement(\"input\", {\n        name: \"campusName\",\n        type: \"text\",\n        value: this.state.campusName,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Campus Address: \", React.createElement(\"input\", {\n        name: \"campusAddress\",\n        type: \"text\",\n        value: this.state.campusAddress,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Campus Image URL: \", React.createElement(\"input\", {\n        name: \"campusAddress\",\n        type: \"text\",\n        value: this.state.campusAddress,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Campus Description: \", React.createElement(\"input\", {\n        name: \"campusAddress\",\n        type: \"text\",\n        value: this.state.campusAddress,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        class: \"button\",\n        type: \"submit\",\n        value: \"Add Campus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SingleCampusContainerEdit;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    allCampuses: state.allCampuses\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(fetchAllCampusesThunk());\n    } // deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n    // addCampus:(campus) => dispatch(addCampus(campus))\n\n  };\n}; // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n// Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainerEdit.js"],"names":["React","Component","connect","fetchAllCampusesThunk","SingleCampusContainerEdit","props","componentDidMount","fetchAllCampuses","console","log","allCampuses","setState","campusName","name","handleChange","event","target","value","state","campusAddress","campusImgURL","campusInfo","handleSubmit","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { fetchAllCampusesThunk } from '../../thunks';\n// import { AllCampusesView } from '../views';\n\n\nclass SingleCampusContainerEdit extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\"\n    }\n  }\n  componentDidMount = () => {\n    this.props.fetchAllCampuses()\n    console.log(this.props.allCampuses)\n    this.setState({\n      campusName: this.props.allCampuses.name\n    })\n  }\n  handleChange = (event) => { this.setState({ [event.target.name]: event.target.value }) }\n\n  render(){\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} class=\"user-input\">\n          <label> \n            Campus Name: <input name=\"campusName\" type=\"text\" value={this.state.campusName} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <label>\n            Campus Address: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n          </label> \n            <br />\n          <label>\n            Campus Image URL: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n          </label>\n          <br />\n          <label>\n            Campus Description: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <input class=\"button\" type=\"submit\" value=\"Add Campus\" />\n        </form>\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    // deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n    // addCampus:(campus) => dispatch(addCampus(campus))\n  }\n}\n\n// Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);\n"]},"metadata":{},"sourceType":"module"}