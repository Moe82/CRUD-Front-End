{"ast":null,"code":"import _classCallCheck from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleCampusContainer.jsx\";\nimport React, { Component } from 'react';\nimport { NavBarView } from '../views';\nimport AllStudentsView from \"../views/AllStudentsView\";\nimport { StudentView } from \"../views\";\nimport { connect } from 'react-redux';\nimport { fetchAllCampuses as _fetchAllCampuses, deleteCampus, addCampus } from '../../thunks';\nimport '../views/styles/allCampusesView.css';\n\nvar SingleCampusContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainer, _Component);\n\n  function SingleCampusContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleCampusContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleCampusContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      console.log(\"SingleCampusContainer did mount\");\n\n      _fetchAllCampuses();\n\n      _this.waitForUpdate();\n    };\n\n    _this.waitForUpdate = function () {\n      if (_this.props.campus == []) setTimeout(_this.waitForUpdate(), 50);\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleCampusContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(NavBarView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: this.props.campus.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Campus: \", this.props.campus.name), this.props.campus.info, React.createElement(\"h2\", {\n        className: \"Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.campus.address), React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.campus.students.map(function (student) {\n        return React.createElement(StudentView, {\n          student: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return SingleCampusContainer;\n}(Component);\n\nvar mapState = function mapState(state, ownprops) {\n  return {\n    campus: state.allCampuses.find(function (campus) {\n      return campus.id == ownprops.match.params.id;\n    })\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(_fetchAllCampuses());\n    }\n  };\n}; // Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainer);","map":{"version":3,"sources":["/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleCampusContainer.jsx"],"names":["React","Component","NavBarView","AllStudentsView","StudentView","connect","fetchAllCampuses","deleteCampus","addCampus","SingleCampusContainer","componentDidMount","console","log","waitForUpdate","props","campus","setTimeout","img","name","info","address","students","map","student","mapState","state","ownprops","allCampuses","find","id","match","params","mapDispatch","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,UAAV,QAA4B,UAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAgB,IAAhBA,iBAAT,EAA2BC,YAA3B,EAAyCC,SAAzC,QAA0D,cAA1D;AACA,OAAO,qCAAP;;IAEMC,qB;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,YAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACAN,MAAAA,iBAAgB;;AACd,YAAKO,aAAL;AACH,K;;UAGDA,a,GAAgB,YAAM;AAAE,UAAI,MAAKC,KAAL,CAAWC,MAAX,IAAqB,EAAzB,EAA6BC,UAAU,CAAC,MAAKH,aAAL,EAAD,EAAuB,EAAvB,CAAV;AAAsC,K;;;;;;;6BAEnF;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,IAA/B,CAJF,EAKG,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,IALrB,EAME;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,OADnB,CANF,EASE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,QAAlB,CAA2BC,GAA3B,CAAgC,UAAAC,OAAO,EAAI;AAC1C,eAAQ,oBAAC,WAAD;AAAa,UAAA,OAAO,EAAEA,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OAFA,CADD,CATF,CADF;AAiBE;;;;EA7B8BtB,S;;AAiCpC,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACpC,SAAO;AACLX,IAAAA,MAAM,EAAEU,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,UAAAb,MAAM;AAAA,aAAIA,MAAM,CAACc,EAAP,IAAaH,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBF,EAAvC;AAAA,KAA7B;AADH,GAAP;AAGD,CAJD;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACL3B,IAAAA,gBAAgB,EAAE;AAAA,aAAM2B,QAAQ,CAAC3B,iBAAgB,EAAjB,CAAd;AAAA;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAeD,OAAO,CAACmB,QAAD,EAAWQ,WAAX,CAAP,CAA+BvB,qBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {  NavBarView } from '../views';\nimport AllStudentsView from \"../views/AllStudentsView\";\nimport { StudentView } from \"../views\";\nimport { connect } from 'react-redux';\nimport { fetchAllCampuses, deleteCampus, addCampus } from '../../thunks';\nimport '../views/styles/allCampusesView.css';\n\nclass SingleCampusContainer extends Component {\n \n  componentDidMount = () => {\n    console.log(\"SingleCampusContainer did mount\")  \n    fetchAllCampuses();\n      this.waitForUpdate();\n  }\n\n  // Does not seem like good practice. just a temporary solution until issue #1 (on GH) is fixed. \n  waitForUpdate = () => { if (this.props.campus == []) setTimeout(this.waitForUpdate(), 50) }\n \n  render(){\n    return (\n      <div>\n        <NavBarView />\n       \n        <img src={this.props.campus.img} /> \n        <h1>Campus: {this.props.campus.name}</h1>\n        {this.props.campus.info}\n        <h2 className=\"Address\">\n        {this.props.campus.address}\n        </h2>\n        <div className=\"grid\">\n        {this.props.campus.students.map( student => {\n          return (<StudentView student={student} />)\n        })}\n        </div>\n        \n      </div>\n    )}\n}\n\n\nconst mapState = (state, ownprops) => {\n  return {\n    campus: state.allCampuses.find(campus => campus.id == ownprops.match.params.id),\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampuses()),\n  }\n}\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainer);"]},"metadata":{},"sourceType":"module"}