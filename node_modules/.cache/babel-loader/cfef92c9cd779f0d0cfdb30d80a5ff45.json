{"ast":null,"code":"import axios from 'axios'; // ACTION TYPES;\n\nvar FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nvar DELETE_CAMPUS = \"DELETE_CAMPUS\"; // ACTION CREATORS;\n\nvar fetchAllCampusesActionCreater = function fetchAllCampusesActionCreater(campuses) {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses\n  };\n};\n\nvar deleteCampusActionCreater = function deleteCampusActionCreater(campusID) {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID\n  };\n}; // THUNK CREATORS;\n\n\nexport var fetchAllCampusesThunk = function fetchAllCampusesThunk() {\n  return function (dispatch) {\n    return axios.get('http://localhost:8081/api/campuses').then(function (res) {\n      return res.data;\n    }).then(function (campuses) {\n      return dispatch(fetchAllCampusesActionCreater(campuses));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteCampus = function deleteCampus(campusID) {\n  return function (dispatch) {\n    return axios.delete('http://localhost:8081/api/campuses', {\n      \"id\": campusID\n    }).then(function () {\n      dispatch(deleteCampusActionCreater(campusID));\n    });\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload;\n\n    case DELETE_CAMPUS:\n      var newState = state.filter(function (campus) {\n        return campus.id != action.payload;\n      });\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/store/utilities/allCampuses.js"],"names":["axios","FETCH_ALL_CAMPUSES","DELETE_CAMPUS","fetchAllCampusesActionCreater","campuses","type","payload","deleteCampusActionCreater","campusID","fetchAllCampusesThunk","dispatch","get","then","res","data","catch","err","console","log","deleteCampus","delete","reducer","state","action","newState","filter","campus","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,aAAa,GAAG,eAAtB,C,CAEA;;AACA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAAC,QAAQ,EAAI;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAEJ,kBADD;AAELK,IAAAA,OAAO,EAAEF,QAAQ,CAACA;AAFb,GAAP;AAID,CALD;;AAOA,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,QAAQ,EAAI;AAC5C,SAAO;AACLH,IAAAA,IAAI,EAAEH,aADD;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD,C,CAOA;;;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACrD,WAAOV,KAAK,CAACW,GAAN,CAAU,oCAAV,EACJC,IADI,CACC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KADJ,EAEJF,IAFI,CAEC,UAAAR,QAAQ;AAAA,aAAIM,QAAQ,CAACP,6BAA6B,CAACC,QAAD,CAA9B,CAAZ;AAAA,KAFT,EAGJW,KAHI,CAGE,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAHL,CAAP;AAID,GALoC;AAAA,CAA9B;AAOP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACX,QAAD;AAAA,SAAc,UAAAE,QAAQ,EAAI;AACpD,WAAOV,KAAK,CAACoB,MAAN,CAAa,oCAAb,EAAmD;AACxD,YAAMZ;AADkD,KAAnD,EAEJI,IAFI,CAEE,YAAM;AACbF,MAAAA,QAAQ,CAACH,yBAAyB,CAACC,QAAD,CAA1B,CAAR;AACD,KAJM,CAAP;AAKD,GAN2B;AAAA,CAArB;;AAUP,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAsB;AAAA,MAArBC,KAAqB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAAClB,IAAf;AACE,SAAKJ,kBAAL;AACE,aAAOsB,MAAM,CAACjB,OAAd;;AACF,SAAKJ,aAAL;AACE,UAAIsB,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,EAAP,IAAaJ,MAAM,CAACjB,OAAxB;AAAA,OAAnB,CAAf;AACA;;AACF;AACE,aAAOgB,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,OAAf","sourcesContent":["import axios from 'axios';\n\n// ACTION TYPES;\nconst FETCH_ALL_CAMPUSES = \"FETCH_ALL_CAMPUSES\";\nconst DELETE_CAMPUS = \"DELETE_CAMPUS\"\n\n// ACTION CREATORS;\nconst fetchAllCampusesActionCreater = campuses => {\n  return {\n    type: FETCH_ALL_CAMPUSES,\n    payload: campuses.campuses\n  }\n}\n\nconst deleteCampusActionCreater = campusID => {\n  return {\n    type: DELETE_CAMPUS,\n    payload: campusID\n  }\n}\n\n// THUNK CREATORS;\nexport const fetchAllCampusesThunk = () => dispatch => {\n  return axios.get('http://localhost:8081/api/campuses')\n    .then(res => res.data)\n    .then(campuses => dispatch(fetchAllCampusesActionCreater(campuses)))\n    .catch(err => console.log(err))\n}\n\nexport const deleteCampus = (campusID) => dispatch => {\n  return axios.delete('http://localhost:8081/api/campuses', {\n    \"id\": campusID\n  }).then( () => {\n    dispatch(deleteCampusActionCreater(campusID))\n  })\n}\n\n\n\nconst reducer = (state=[], action) => {\n  switch (action.type) {\n    case FETCH_ALL_CAMPUSES:\n      return action.payload\n    case DELETE_CAMPUS:\n      let newState = state.filter(campus => campus.id != action.payload)\n      return \n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}