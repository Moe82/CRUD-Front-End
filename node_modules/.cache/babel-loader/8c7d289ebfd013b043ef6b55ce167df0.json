{"ast":null,"code":"import _defineProperty from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusEditContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\nimport { fetchAllCampuses as _fetchAllCampuses, updateCampus as _updateCampus, fetchAllStudents as _fetchAllStudents, updateStudent } from '../../thunks';\nimport { NavBarContainer } from \"../containers\";\n/* import {SingleCampusEditView }from '../views' */\n\nvar SingleCampusContainerEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainerEdit, _Component);\n\n  function SingleCampusContainerEdit(props) {\n    var _this;\n\n    _classCallCheck(this, SingleCampusContainerEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainerEdit).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.props.fetchAllCampuses();\n\n      _this.props.fetchAllStudents();\n\n      setTimeout(function () {\n        var thisCampus = _this.props.allCampuses.find(function (campus) {\n          return campus.id == _this.props.match.params.id;\n        });\n\n        _this.setState({\n          campusName: thisCampus.name,\n          campusAddress: thisCampus.address,\n          campusImgURL: thisCampus.img,\n          campusInfo: thisCampus.info\n        });\n      }, 1000);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.updateCampus({\n        name: _this.state.campusName,\n        address: _this.state.campusAddress,\n        img: _this.state.campusImgURL,\n        info: _this.state.campusInfo,\n        id: parseInt(_this.props.match.params.id)\n      });\n    };\n\n    _this.handleAddStudent = function (event) {\n      event.preventDefault();\n\n      _this.props.updateStudent({\n        campusId: parseInt(_this.props.match.params.id),\n        studentId: _this.state.idOfStudentToAdd\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\",\n      numberOfStudents: 0,\n      idOfStudentToAdd: \"\"\n    };\n    return _this;\n  } // ask Bashir about the setTimeout method. \n\n\n  _createClass(SingleCampusContainerEdit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Edit Campus\"), React.createElement(NavBarContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        class: \"user-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Campus Name: \", React.createElement(\"input\", {\n        name: \"campusName\",\n        type: \"text\",\n        value: this.state.campusName,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Campus Address: \", React.createElement(\"input\", {\n        name: \"campusAddress\",\n        type: \"text\",\n        value: this.state.campusAddress,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Campus Image URL: \", React.createElement(\"input\", {\n        name: \"campusImgURL\",\n        type: \"text\",\n        value: this.state.campusImgURL,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Campus Description: \", React.createElement(\"input\", {\n        name: \"campusInfo\",\n        type: \"text\",\n        value: this.state.campusInfo,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        class: \"button\",\n        type: \"submit\",\n        value: \"Save changes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleAddStudent,\n        class: \"user-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"idOfStudentToAdd\",\n        value: this.state.idOfStudentToAdd,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.allStudents.map(function (student) {\n        return React.createElement(\"option\", {\n          value: student.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" \", student.firstName, student.lastName, \" \");\n      })), React.createElement(\"input\", {\n        class: \"button\",\n        type: \"submit\",\n        value: \"Add Student\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), this.state.numberOfStudents === 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"There are no student currently registered to this campus.\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"There are \", this.state.numberOfStudents, \" in this campus.\"));\n    }\n  }]);\n\n  return SingleCampusContainerEdit;\n}(Component); // Map state to props;\n\n\nvar mapState = function mapState(state) {\n  return {\n    allCampuses: state.allCampuses,\n    allStudents: state.allStudents\n  };\n}; // Map dispatch to props;\n\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllStudents: function fetchAllStudents() {\n      return dispatch(_fetchAllStudents());\n    },\n    fetchAllCampuses: function fetchAllCampuses() {\n      return dispatch(_fetchAllCampuses());\n    },\n    updateCampus: function updateCampus(campus) {\n      return dispatch(_updateCampus(campus));\n    },\n    updateStudent: function updateStudent(student) {\n      return dispatch(_updateCampus(student));\n    }\n  };\n}; // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n// Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusEditContainer.jsx"],"names":["React","Component","connect","fetchAllCampuses","updateCampus","fetchAllStudents","updateStudent","NavBarContainer","SingleCampusContainerEdit","props","componentDidMount","setTimeout","thisCampus","allCampuses","find","campus","id","match","params","setState","campusName","name","campusAddress","address","campusImgURL","img","campusInfo","info","handleSubmit","event","preventDefault","state","parseInt","handleAddStudent","campusId","studentId","idOfStudentToAdd","handleChange","target","value","numberOfStudents","allStudents","map","student","firstName","lastName","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { fetchAllCampuses, updateCampus, fetchAllStudents, updateStudent } from '../../thunks';\nimport { NavBarContainer } from \"../containers\";\n/* import {SingleCampusEditView }from '../views' */\n\n\nclass SingleCampusContainerEdit extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      campusName: \"\",\n      campusAddress: \"\",\n      campusImgURL: \"\",\n      campusInfo: \"\",\n      numberOfStudents: 0,\n      idOfStudentToAdd: \"\"\n    }\n  }\n\n  // ask Bashir about the setTimeout method. \n  componentDidMount = () => {\n    this.props.fetchAllCampuses()\n    this.props.fetchAllStudents()\n    setTimeout( () => {\n      let thisCampus = this.props.allCampuses.find(campus => campus.id == this.props.match.params.id)\n      this.setState({\n        campusName: thisCampus.name,\n        campusAddress: thisCampus.address,\n        campusImgURL: thisCampus.img,\n        campusInfo: thisCampus.info, \n      })\n    }, 1000)\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateCampus({\n      name: this.state.campusName,\n      address: this.state.campusAddress,\n      img: this.state.campusImgURL,\n      info: this.state.campusInfo,\n      id: parseInt(this.props.match.params.id)\n    })\n  } \n\n  handleAddStudent = (event) => {\n    event.preventDefault()\n    this.props.updateStudent({\n      campusId : parseInt(this.props.match.params.id),\n      studentId : this.state.idOfStudentToAdd\n    })\n  } \n\n  handleChange = (event) => { this.setState({ [event.target.name]: event.target.value }) }\n\n  render(){\n    return (\n      <div>\n        <h1>Edit Campus</h1>\n        <NavBarContainer/>\n        <form onSubmit={this.handleSubmit} class=\"user-input\">\n          <label> \n            Campus Name: <input name=\"campusName\" type=\"text\" value={this.state.campusName} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <label>\n            Campus Address: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n          </label> \n            <br />\n          <label>\n            Campus Image URL: <input name=\"campusImgURL\" type=\"text\" value={this.state.campusImgURL} onChange={this.handleChange} required/> \n          </label>\n          <br />\n          <label>\n            Campus Description: <input name=\"campusInfo\" type=\"text\" value={this.state.campusInfo} onChange={this.handleChange} required/> \n          </label>\n            <br />\n          <input class=\"button\" type=\"submit\" value=\"Save changes\" />\n        </form>\n        <br/>\n        <br/>\n        {/* <select name='language' value={this.state.language} onChange={this.handleChange}></select> */}\n        <form onSubmit={this.handleAddStudent} class=\"user-input\">\n          <select name='idOfStudentToAdd' value={this.state.idOfStudentToAdd} onChange={this.handleChange}>\n            {this.props.allStudents.map(student => {\n              return (<option value={student.id}> {student.firstName}{student.lastName} </option>)\n            })}\n          </select> \n          <input class=\"button\" type=\"submit\" value=\"Add Student\" />\n        </form>\n        <div>\n        </div>\n        \n        <br/>\n        {(this.state.numberOfStudents === 0)? <div>There are no student currently registered to this campus.</div> :\n        <div>There are {this.state.numberOfStudents} in this campus.</div>}\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses,\n    allStudents: state.allStudents\n  }\n}\n\n// Map dispatch to props;\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudents()),\n    fetchAllCampuses: () => dispatch(fetchAllCampuses()),\n    updateCampus: (campus) => dispatch(updateCampus(campus)),\n    updateStudent: (student) => dispatch(updateCampus(student))\n  }\n}\n\n// Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleCampusContainerEdit);\n"]},"metadata":{},"sourceType":"module"}