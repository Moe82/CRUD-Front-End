{"ast":null,"code":"import _classCallCheck from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleStudentContainer.jsx\";\nimport React, { Component } from 'react';\nimport { NavBarView } from '../views';\nimport { StudentView } from \"../views\";\nimport { connect } from 'react-redux';\n\nvar SingleStudentContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleStudentContainer, _Component);\n\n  function SingleStudentContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleStudentContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleStudentContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      console.log(\"SingleStudentContainer did mount\");\n      /*     fetchAllCampuses();\n            this.waitForUpdate(); */\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleStudentContainer, [{\n    key: \"render\",\n\n    /*   // Does not seem like good practice. just a temporary solution until issue #1 (on GH) is fixed. \n      waitForUpdate = () => { if (this.props.campus == []) setTimeout(this.waitForUpdate(), 50) } */\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(NavBarView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Hello\"));\n    }\n  }]);\n\n  return SingleStudentContainer;\n}(Component);\n\nvar mapState = function mapState(state, ownprops) {\n  return {\n    campus: state.allStudent.find(function (student) {\n      return student.id == ownprops.match.params.id;\n    })\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchAllStudents: function (_fetchAllStudents) {\n      function fetchAllStudents() {\n        return _fetchAllStudents.apply(this, arguments);\n      }\n\n      fetchAllStudents.toString = function () {\n        return _fetchAllStudents.toString();\n      };\n\n      return fetchAllStudents;\n    }(function () {\n      return dispatch(fetchAllStudents());\n    })\n  };\n}; // Export our store-connected container by default;\n\n\nexport default connect(mapState, mapDispatch)(SingleStudentContainer);","map":{"version":3,"sources":["/Users/junior/ttpTeamAssingment/CRUD-FRONTEND/CRUD-Front-End/src/components/containers/SingleStudentContainer.jsx"],"names":["React","Component","NavBarView","StudentView","connect","SingleStudentContainer","componentDidMount","console","log","mapState","state","ownprops","campus","allStudent","find","student","id","match","params","mapDispatch","dispatch","fetchAllStudents"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,UAAV,QAA4B,UAA5B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,sB;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAoB,YAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACJ;;AAEG,K;;;;;;;;AAEH;;6BAGU;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAKE;;;;EAjB+BP,S;;AAqBrC,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACpC,SAAO;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAsB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACC,EAAR,IAAcL,QAAQ,CAACM,KAAT,CAAeC,MAAf,CAAsBF,EAAxC;AAAA,KAA7B;AADH,GAAP;AAGD,CAJD;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO;AACLC,IAAAA,gBAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE;AAAA,aAAMD,QAAQ,CAACC,gBAAgB,EAAjB,CAAd;AAAA,KAAF;AADX,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAejB,OAAO,CAACK,QAAD,EAAWU,WAAX,CAAP,CAA+Bd,sBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {  NavBarView } from '../views';\nimport { StudentView } from \"../views\";\nimport { connect } from 'react-redux';\n\nclass SingleStudentContainer extends Component {\n \n  componentDidMount = () => {\n    console.log(\"SingleStudentContainer did mount\")  \n/*     fetchAllCampuses();\n      this.waitForUpdate(); */\n  }\n\n/*   // Does not seem like good practice. just a temporary solution until issue #1 (on GH) is fixed. \n  waitForUpdate = () => { if (this.props.campus == []) setTimeout(this.waitForUpdate(), 50) } */\n \n  render(){\n    return (\n      <div>\n        <NavBarView />\n        <h1>Hello</h1>\n      </div>\n    )}\n}\n\n\nconst mapState = (state, ownprops) => {\n  return {\n    campus: state.allStudent.find(student => student.id == ownprops.match.params.id),\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudents()),\n  }\n}\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(SingleStudentContainer); "]},"metadata":{},"sourceType":"module"}