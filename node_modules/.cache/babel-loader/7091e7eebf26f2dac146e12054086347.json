{"ast":null,"code":"import _classCallCheck from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllCampusesThunk, deleteCampus, addCampus } from '../../thunks';\nimport { AllCampusesView } from '../views';\n\nvar SingleCampusContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleCampusContainer, _Component);\n\n  function SingleCampusContainer() {\n    _classCallCheck(this, SingleCampusContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SingleCampusContainer).apply(this, arguments));\n  }\n\n  _createClass(SingleCampusContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, console.log(\"here\"), console.log(this.props.id));\n    }\n  }]);\n\n  return SingleCampusContainer;\n}(Component);\n\nexport default SingleCampusContainer; //   componentDidMount() {\n//     this.props.fetchAllCampuses();\n//   }\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       campusName: \"\",\n//       campusAddress: \"\"\n//     }\n//   }\n//   handleSubmit = (event) => {\n//     event.preventDefault()\n//     this.props.addCampus(this.state)\n//     this.setState({\n//       campusName: \"\",\n//       campusAddress: \"\"\n//     })\n//   }\n//   handleChange = (event) => { this.setState({ [event.target.name]: event.target.value }) }\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit} class=\"user-input\">\n//         <label>\n//           <br />\n//           Campus: <input name=\"campusName\" type=\"text\" value={this.state.campusName} onChange={this.handleChange} required/> \n//         </label>\n//         <label>\n//           Address: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n//         </label>  \n//         <input class=\"button\" type=\"submit\" value=\"Add Campus\" />\n//       </form>\n//       <div >\n//         <AllCampusesView allCampuses={this.props.allCampuses} deleteCampus={this.props.deleteCampus}/>\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n// // Map state to props;\n// const mapState = state => {\n//   return {\n//     allCampuses: state.allCampuses\n//   }\n// }\n// // Map dispatch to props;\n// const mapDispatch = dispatch => {\n//   return {\n//     fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n//     deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n//     addCampus:(campus) => dispatch(addCampus(campus))\n//   }\n// }\n// // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n// // Export our store-connected container by default;\n// export default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"sources":["/Users/mohamedshafee/Documents/TTP/CRUD/CRUD-Front-End/src/components/containers/SingleCampusContainer.js"],"names":["React","Component","PropTypes","connect","fetchAllCampusesThunk","deleteCampus","addCampus","AllCampusesView","SingleCampusContainer","console","log","props","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,EAAgCC,YAAhC,EAA8CC,SAA9C,QAA+D,cAA/D;AACA,SAASC,eAAT,QAAgC,UAAhC;;IAGMC,qB;;;;;;;;;;;;;6BACI;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OAAO,CAACC,GAAR,CAAY,MAAZ,CADH,EAEGD,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,EAAvB,CAFH,CADF;AAMD;;;;EARiCX,S;;AAWpC,eAAeO,qBAAf,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchAllCampusesThunk, deleteCampus, addCampus } from '../../thunks';\nimport { AllCampusesView } from '../views';\n\n\nclass SingleCampusContainer extends Component {\n  render(){\n    return (\n      <div>\n        {console.log(\"here\")}\n        {console.log(this.props.id)}\n      </div>\n    )\n  }\n}\n\nexport default SingleCampusContainer\n//   componentDidMount() {\n//     this.props.fetchAllCampuses();\n//   }\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       campusName: \"\",\n//       campusAddress: \"\"\n//     }\n//   }\n  \n//   handleSubmit = (event) => {\n//     event.preventDefault()\n//     this.props.addCampus(this.state)\n//     this.setState({\n//       campusName: \"\",\n//       campusAddress: \"\"\n//     })\n//   }\n\n//   handleChange = (event) => { this.setState({ [event.target.name]: event.target.value }) }\n  \n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit} class=\"user-input\">\n//         <label>\n//           <br />\n//           Campus: <input name=\"campusName\" type=\"text\" value={this.state.campusName} onChange={this.handleChange} required/> \n//         </label>\n//         <label>\n//           Address: <input name=\"campusAddress\" type=\"text\" value={this.state.campusAddress} onChange={this.handleChange} required/> \n//         </label>  \n//         <input class=\"button\" type=\"submit\" value=\"Add Campus\" />\n//       </form>\n//       <div >\n//         <AllCampusesView allCampuses={this.props.allCampuses} deleteCampus={this.props.deleteCampus}/>\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n\n// // Map state to props;\n// const mapState = state => {\n//   return {\n//     allCampuses: state.allCampuses\n//   }\n// }\n\n// // Map dispatch to props;\n// const mapDispatch = dispatch => {\n//   return {\n//     fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n//     deleteCampus: (campusID) => dispatch(deleteCampus(campusID)),\n//     addCampus:(campus) => dispatch(addCampus(campus))\n//   }\n// }\n\n// // Type check props;\n// AllCampusesContainer.propTypes = {\n//   allCampuses: PropTypes.array.isRequired,\n//   fetchAllCampuses: PropTypes.func.isRequired\n// }\n\n// // Export our store-connected container by default;\n// export default connect(mapState, mapDispatch)(AllCampusesContainer);"]},"metadata":{},"sourceType":"module"}